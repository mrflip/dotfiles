#!/usr/bin/env bash

if    uname -a | egrep 'Darwin.* 1[012]\.[0-9]' > /dev/null 2>&1 ; then
  export MACHINE=OSX
elif  uname -a | egrep -q 'Darwin.*9\.[6789]'   > /dev/null 2>&1 ; then
  export MACHINE=OSX
elif uname -a | egrep -q '^Linux' > /dev/null 2>&1 ; then
  # grep -i ubuntu /etc/issue
  export MACHINE=LINUX
fi

# define append_path and prepend_path to add directory paths, e.g. PATH, MANPATH.
# add to end of path
append_path()
{
  if [ "${!1}" == "" ] ; then
    eval "$1=$2"
  elif ! eval test -z "\"\${$1##*:$2:*}\"" -o -z "\"\${$1%%*:$2}\"" -o -z "\"\${$1##$2:*}\"" -o -z "\"\${$1##$2}\"" ; then
    eval "$1=\$$1:$2"
  fi
}

# add to front of path
prepend_path()
{
  if [ "${!1}" == "" ] ; then
    eval "$1=$2"
  elif ! eval test -z "\"\${$1##*:$2:*}\"" -o -z "\"\${$1%%*:$2}\"" -o -z "\"\${$1##$2:*}\"" -o -z "\"\${$1##$2}\"" ; then
    eval "$1=$2:\$$1"
  fi
}

###########################################################################
#
# PATH
#
export PATH
export MANPATH=${MANPATH-/usr/local/man}

# export CORE_PATH=/usr/local/bin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/X11/bin:/usr/X11R6/bin
export PKG_CONFIG_PATH="/usr/local/lib/pkgconfig:/usr/local/share/pkgconfig:/usr/lib/pkgconfig:/usr/share/pkgconfig:/usr/X11R6/lib/pkgconfig"

# remove these, so they can be added to the front
shopt -s extglob
PATH=${PATH//\/usr\/local\/bin\:/}
PATH=${PATH//\/usr\/local\/sbin\:/}
PATH=${PATH//$HOME\/.rbenv\/shims\:/}

# PATH=/Users/flip/slice/bin:/Users/flip/bin:/Users/flip/.rbenv/shims:/usr/local/sbin:/usr/local/bin:/Users/flip/.rbenv/bin:/usr/local/share/python:/usr/bin:/bin:/usr/sbin:/sbin:/usr/X11/bin:/System/Library/Frameworks/JavaVM.framework/Versions/1.6.0/Home/bin

PATH=/usr/local/bin:/usr/local/sbin:${PATH}
prepend_path PATH    /usr/local/share/python
prepend_path PATH    $HOME/.rbenv/bin
prepend_path PATH    $HOME/.rbenv/shims
prepend_path PATH    $HOME/bin
prepend_path PATH    $HOME/slice/bin
prepend_path MANPATH /usr/local/share/man
prepend_path MANPATH /usr/local/man
append_path  MANPATH /usr/share/man
prepend_path PYTHONPATH /usr/local/lib/python

export RUBYLIB=$HOME/.rubylib
export JRUBY_OPTS="--1.9"

export NODE_PATH
prepend_path NODE_PATH /usr/local/lib/node_modules

if [ "$MACHINE" == "OSX" ] ; then export HOMEBREW_TEMP=/tmp ; fi


###########################################################################
#
# Chef setup
#

export CHEF_USER="mrflip"
export CSTN_ORG="local"
export CSTN_CLUSTER="fleep"
export CSTN_FACET="$NODENAME"
export CSTN_DIR=$HOME/ics/sysadmin/chimpstation-homebase

###########################################################################
#
# Amazon EC2 Setup
#
#
# In order to communicate with AWS/EC2/S3 stuff first make sure you
# have a valid AWS account (we do, it's aws@infochimps.org), make sure
# we've signed up for the corresponding service (we have for EC2 &
# S3), and make sure we've put in a credit card (we have).
#

export   EC2_CERTS_DIR=${EC2_CERTS_DIR-./.chef/credentials/ec2_certs}
export EC2_PRIVATE_KEY=${EC2_CERTS_DIR}/pk.pem
export        EC2_CERT=${EC2_CERTS_DIR}/cert.pem

# # Location of EC2 keys.
# export EC2_KEYPAIR_DIR=${EC2_KEYPAIR_DIR-./.chef/credentials/ec2_keys}
# export EC2_KEYPAIR_NAME=${EC2_KEYPAIR_NAME-burninator}
# export EC2_KEYPAIR_FILE="${EC2_KEYPAIR_DIR}/${EC2_KEYPAIR_NAME}.pem"
# export EC2_SSH_OPTIONS="-i ${EC2_KEYPAIR_FILE} -o StrictHostKeyChecking=no -o ServerAliveInterval=30"
# export SSH_OPTS=$EC2_SSH_OPTIONS


if [ "$EC2_HOME" = "" ] ; then
  if [ -d /usr/local/share/ec2-api-tools ] ; then
    export EC2_HOME=/usr/local/share/ec2-api-tools
  else
    export EC2_HOME=`/bin/ls -1d  /usr/local/Cellar/ec2-api-tools/*/jars 2>/dev/null | sort | tail -n1`
  fi
fi

if   [ "$MACHINE" == "OSX" ] ; then
  # export JAVA_HOME=${JAVA_HOME-/System/Library/Frameworks/JavaVM.framework/Versions/1.6.0/Home}
  export JAVA_HOME=${JAVA_HOME-/Library/Java/Home}
  export EC2_AMITOOL_HOME=/usr/local
  export HADOOP_HOME=${HADOOP_HOME-/usr/local/share/hadoop}
  export PIG_HOME=${PIG_HOME-/usr/local/share/pig}
elif [ "$MACHINE" == "LINUX" ] ; then
  export HADOOP_HOME=${HADOOP_HOME-/usr/lib/hadoop/}
  # export PIG_HOME=${PIG_HOME-/usr/local/share/pig}
  # On linux, it's installed via apt, so lives in /usr/bin/...
  if [ -e /usr/lib/jvm/jdk1.6.0_32/bin/java ] ; then
    export JAVA_HOME=${JAVA_HOME-/usr/lib/jvm/jdk1.6.0_32}
  else
    export JAVA_HOME=${JAVA_HOME-/usr/lib/jvm/java-6-sun/jre}
  fi
  export PIG_CLASSPATH=/etc/hadoop/conf
fi
append_path PATH $JAVA_HOME/bin
